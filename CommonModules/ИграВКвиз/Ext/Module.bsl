
#Область ПрограммныйИнтерфейс
//Михаил, могу попросить подсказать, верно ли то что это программный интерфейс, или это СлужебныйПрограммный,
//кажется я немного не понимаю это

Процедура ПринятьКомандуВКвиз(Команда, Квиз, Логин, Пароль) Экспорт
	
	ЗафиксироватьПарольПоЛогину(Квиз, Логин, Пароль);
	
	РегистрыСведений.ЗаявкаНаИгру.УдалитьЗаявкуНаИгру(Квиз, Команда);	
	Сообщение = Обсуждения.ОписаниеСообщения(СтрШаблон("Рады принять вас к нам на игру,
		|Ваш логин: %1
		|Ваш пароль: %2", Логин, Пароль));
	Получатель = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.Команды.КапитанКоманды(Команда));
	Обсуждения.ОтправитьСообщение(Пользователи.ТекущийПользователь(), Получатель, Сообщение);

КонецПроцедуры

Функция ВопросыИОтветыРаунда(Квиз, Раунд) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КвизыРаунды.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ втНомерСтрокиРаунда
	|ИЗ
	|	Справочник.Квизы.Раунды КАК КвизыРаунды
	|ГДЕ
	|	КвизыРаунды.Ссылка = &Квиз
	|	И КвизыРаунды.Раунд = &Раунд
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КвизыКоманды.Команда КАК Команда,
	|	КвизыВопросы.Вопрос КАК Вопрос,
	|	Квизы.Ссылка КАК Квиз
	|ПОМЕСТИТЬ втВопросыРаунда
	|ИЗ
	|	Справочник.Квизы.Команды КАК КвизыКоманды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Квизы КАК Квизы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Квизы.Вопросы КАК КвизыВопросы
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНомерСтрокиРаунда КАК втНомерСтрокиРаунда
	|				ПО КвизыВопросы.КлючСвязи = втНомерСтрокиРаунда.НомерСтроки
	|			ПО (КвизыВопросы.Ссылка = Квизы.Ссылка)
	|		ПО КвизыКоманды.Ссылка = Квизы.Ссылка
	|ГДЕ
	|	Квизы.Ссылка = &Квиз
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВопросыРаунда.Команда КАК Команда,
	|	втВопросыРаунда.Вопрос КАК Вопрос,
	|	втВопросыРаунда.Вопрос.ЭталонныйОтвет КАК ЭталонныйОтвет,
	|	ОтветыКомандыПоРаундуОтветы.Ответ КАК Ответ,
	|	ОтветыКомандыПоРаундуОтветы.Принят КАК Принят,
	|	ВЫБОР
	|		КОГДА ОтветыКомандыПоРаундуОтветы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтветов.Проверено)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтветКомандыПринят
	|ИЗ
	|	втВопросыРаунда КАК втВопросыРаунда
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтветыКомандыПоРаунду.Ответы КАК ОтветыКомандыПоРаундуОтветы
	|		ПО втВопросыРаунда.Команда = ОтветыКомандыПоРаундуОтветы.Ссылка.Команда
	|			И втВопросыРаунда.Вопрос = ОтветыКомандыПоРаундуОтветы.Вопрос
	|			И втВопросыРаунда.Квиз = ОтветыКомандыПоРаундуОтветы.Ссылка.Квиз
	|
	|УПОРЯДОЧИТЬ ПО
	|	Команда";
	
	Запрос.УстановитьПараметр("Раунд", Раунд);
	Запрос.УстановитьПараметр("Квиз", Квиз);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Процедура ПроверитьОтветКоманды(Квиз, Раунд, Команда, Ответы) Экспорт
	
	ОтветыКомандыПоРаунду = Документы.ОтветыКомандыПоРаунду.ОтветКоманды(Квиз, Раунд, Команда);
	Если ОтветыКомандыПоРаунду.Пустая() Тогда
		ВызватьИсключение(
				НСтр("ru = 'Нет ответа от команды'"),
				,
				"ОшибкаНетОтветаОтКоманды");
	КонецЕсли;
	
	ДокументОтветов = ОтветыКомандыПоРаунду.ПолучитьОбъект();
	ДокументОтветов.Заблокировать();
	Для Каждого СтрокаОтвет Из Ответы Цикл
		Если СтрокаОтвет.Принят Тогда
			НайденнаяСтрока = ДокументОтветов.Ответы.Найти(СтрокаОтвет.Вопрос);
			НайденнаяСтрока.Принят = Истина;
		КонецЕсли;	
	КонецЦикла;
	ДокументОтветов.Статус = Перечисления.СтатусыОтветов.Проверено;
	ДокументОтветов.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ДобавитьЗаявкуНаИгру(Квиз, Команда) Экспорт

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.Квизы");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Квиз);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;

	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		Если Справочники.Квизы.КомандаУжеУчаствуетВКвиз(Квиз, Команда) Тогда
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Команда %1 уже участвует в квизе %2'"), Команда, Квиз);	
		КонецЕсли;
		ИграВКвиз.ДобавитьЗаявкуНаИгру(Квиз, Команда);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗафиксироватьПарольПоЛогину(Квиз, Логин, Пароль) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Квиз, Пароль, Логин);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти